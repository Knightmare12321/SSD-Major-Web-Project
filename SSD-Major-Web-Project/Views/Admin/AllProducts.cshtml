@model PaginatedList<SSD_Major_Web_Project.ViewModels.AdminProductVM>

@{
    ViewData["Title"] = "AllProducts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="admin-product-main">

<div id="product-list" class="table-responsive">
    <p class="message">@ViewBag.Message</p>
    <input id="search-term" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="search product name" />
    <input name="pageIndex" value="@Model.PageIndex" hidden />
    <button class="btn btn-secondary" onClick="getFilteredAndPaginatedProducts(@Model.PageIndex)">Filter</button>
    <div>
        <input id="show-inactive" type="checkbox" checked="@ViewBag.ShowInactive" onChange="getFilteredAndPaginatedProducts(1)" />
        <label>Show inactive listing</label>
    </div>
    <button class=" add-btn btn btn-primary" onclick="location.href='@Url.Action("CreateProduct","Admin")'">Add Listing</button>
    <table class="table transaction-table">
        <thead>
            <tr>
                <th>Id</th>
                <th class="name">Name</th>
                <th>Price</th>
                <th>Status</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td> @Html.DisplayFor(modelItem => item.PkProductId)</td>
                    <td class="name ellipsis"> @Html.DisplayFor(modelItem => item.Name)</td>
                    <td class="tight"> $@item.Price</td>
                    <td class="tight"> @Html.DisplayName(item.IsActive == true ? "Active" : "Inactive")</td>
                    <td class="tight">
                        <a asp-action="EditProduct" asp-route-productId="@item.PkProductId">
                            <button class="btn btn-secondary">Edit</button>
                        </a>
                    </td>
                    <td class="tight">
                        <a asp-action="DeactivateProduct" asp-route-productId="@item.PkProductId">
                            <button class="btn btn-danger">Deactivate</button>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<nav id="all-products-pagination">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               onClick="getFilteredAndPaginatedProducts(@(Model.PageIndex - 1))">
                Previous
            </a>
        </li>
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               onClick="getFilteredAndPaginatedProducts(@(Model.PageIndex + 1))">
                Next
            </a>
        </li>
    </ul>
</nav>
</div>


<script>
    const getFilteredAndPaginatedProducts = (pageIndex) => {
        const searchTerm = $("#search-term").val();
        const showInactive = $("#show-inactive").prop('checked')
        const url = '@Url.Action("AllProducts", "Admin")';
        $.ajax({
            type: "GET",
            url: url,
            data: { "searchTerm": searchTerm, "pageIndex": pageIndex, "showInactive":showInactive },
            success: function (data) {
                const parser = new DOMParser();
                const newDoc = parser.parseFromString(data, 'text/html');
                $('#admin-product-main')[0].innerHTML = newDoc.getElementById("admin-product-main").innerHTML;
            }
        });
    }
</script>                       