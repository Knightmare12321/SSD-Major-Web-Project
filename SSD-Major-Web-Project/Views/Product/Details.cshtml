@model SSD_Major_Web_Project.ViewModels.ProductDetailVM

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* @Html.DisplayFor(model => model.IsActive) *@
<div class="return-menu-btn">
    <a asp-action="Index">Back to List</a>
</div>

<h1>@Html.DisplayFor(model => model.Name)</h1>

<div class="product-details-container">
    <div class="product-details-left">
        <div class="product-image-container">
            @if (Model.ImageByteArray != null && Model.ImageByteArray.Count > 0)
            {
                <img src="data:image/jpeg;base64,
                         @Convert.ToBase64String(Model.ImageByteArray[0])"
                     alt="Model.Name"
                     class="product-image mySlides"/>
                @for (int i = 1; i < Model.ImageByteArray.Count; i++)
                {
                    <img src="data:image/jpeg;base64,
                            @Convert.ToBase64String(Model.ImageByteArray[i])"
                         alt="Model.Name"
                         class="product-image mySlides" 
                         style = "display:none"/>
                }
            }
            @{
                /*TODO: Deal with overflow styling issues*/
            }
            @if (Model.ImageByteArray != null && Model.ImageByteArray.Count > 1)
            {
                <div class="w3-row-padding w3-section">
                    @for (int i = 0; i < Model.ImageByteArray.Count; i++)
                    {
                        <div class="w3-col s4">
                            <img class="demo w3-opacity w3-hover-opacity-off"
                                 src="data:image/jpeg;base64,
                                    @Convert.ToBase64String(Model.ImageByteArray[i])"
                                 style="width:100%;cursor:pointer"
                                 alt="Model.Name"
                                 onclick="currentDiv(@(i+1))" />
                        </div>
                    }
                </div>
            }

        </div>
    </div>
    <div class="product-details-right">
        <div class="info-container">
            <div>
                <h4>Select Size</h4>
            </div>
            <div class="size-container">
                @foreach (var i in Model.Sizes)
                {
                    <button class="size-button">i</button>
                }
                
            </div>
            <hr />
            <div class="product-description">
                @Html.DisplayFor(model => model.Description)
            </div>
            <div class="product-price">
                $@Html.DisplayFor(model => model.Price)
            </div>
            <div class="product-buttons-container">
                <button id="product-add-to-bag">
                    @{
                        if (!ViewBag.isCart)
                            @Html.ActionLink("ADD TO BAG", "Details", new { id = Model.PkProductId, catagory = "cart", method = "add" })
                        else
                            @Html.ActionLink("REMOVE FROM BAG", "Details", new { id = Model.PkProductId, catagory = "cart", method = "remove" })
                    }
                </button>
                <button id="product-add-to-wishlist">
                    @{
                        if (!ViewBag.isFav)
                            @Html.ActionLink("ADD TO FAVORITE", "Details", new { id = Model.PkProductId, catagory = "favorite", method = "add" })
                        else
                            @Html.ActionLink("REMOVE FROM FAVORITE", "Details", new { id = Model.PkProductId, catagory = "favorite", method = "remove" })
                    }
                </button>
            </div>
        </div>
    </div>
</div>



